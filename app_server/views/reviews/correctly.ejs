<%- include("../layout/header") %>

<div class="col-md-10  list-group-item pb-4">
    <form id="review_form">
        <h3>Оставить отзыв</h3>
        <div class="mb-3">
            <label for="rewiew-name">Ваше имя</label>
            <input type=" text" class="form-control" name="name" id="rewiew-name">
            <div class="invalid-feedback">
                Имя должно содержать от 2 до 32 русских или английских символов
            </div>
        </div>

        <div class=" mb-3">
            <label for="rewiew-text">Текст отзыва</label>
            <textarea class="form-control" name="text" id="rewiew-text"></textarea>
            <div class="invalid-feedback">
                Отзыв должен содержать от 5 до 1000 символов
            </div>
        </div>
        <button class="btn btn-primary btn-lg btn-block">Отправить</button>
    </form>

</div>
<div id="review-block"
    class=" no-gutters border rounded overflow-hidden flex-md-row  shadow-sm col-md-10 position-relative">
    <div class="pb-2  pt-2">
        <% if(reviews.length==0) {%>
        <h3 class="">Отзывов пока что нет</h3>
        <% } else { %>

        <% reviews.forEach((review)=>{ %>
        <div class="card  mb-1">
            <div class="cardArea">
                <div class="card-header">
                    <div class="div-name"> <%=review.name%></div>

                    <% if (isAdmin||review.owner==owner) {%>
                    <%if(review.owner==owner){%>
                    <button class="btn btn-warning editButton" type="button">
                        <svg class="bi bi-pencil" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor"
                            xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd"
                                d="M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z" />
                            <path fill-rule="evenodd"
                                d="M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z" />
                        </svg>
                    </button>
                    <%}%>
                <button class="btn btn-danger" type="button" data-toggle="collapse"
                    data-target="#collapse<%-review.reviewId%>" aria-expanded="false">
                    <svg class="bi bi-trash" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor"
                        xmlns="http://www.w3.org/2000/svg">
                        <path
                            d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                        <path fill-rule="evenodd"
                            d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                    </svg>
                    </button>
                    <div class="collapse" id="collapse<%-review.reviewId%>">
                        <div class="card card-body">
                            Вы уверены?
                            <button type="button" id="delete<%-review.reviewId%>"
                                class="btn btn-danger deleteButton">Удалить</button>
                        </div>
                    </div>
                    <%}%>
                    <spam class="date">
                        <%= moment(review.createdAt).format('lll'); %>
                    </spam>
                </div>
                <div class="card-body">
                    <div class="div-text">
                        <%=review.text%>
                    </div>

                </div>
            </div>
            <%if(review.owner==owner){%>
            <form id="form<%-review.reviewId%>" hidden>
                <div class="card-header">
                    <input class="textarea-name" name="name" value="<%=review.name%>">
                    <div class="invalid-feedback">
                        Имя должно содержать от 2 до 32 русских или английских символов
                    </div>
                    <button class="btn btn-success successButton " type="submit">
                        <svg class="bi bi-check-circle" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor"
                            xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd"
                                d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                            <path fill-rule="evenodd"
                                d="M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z" />
                        </svg>
                    </button>
                    <button class="btn btn-secondary backButton" type="button">
                        <svg class="bi bi-x-circle" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor"
                            xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd"
                                d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                            <path fill-rule="evenodd"
                                d="M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z" />
                            <path fill-rule="evenodd"
                                d="M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z" />
                        </svg>
                    </button>
                </div>
                <div class="card-body">
                    <textarea class="textarea-text" name="text"> <%=review.text%></textarea>
                    <div class="invalid-feedback">
                        Отзыв должен содержать от 5 до 1000 символов
                    </div>
                </div>
            </form>

        </div>

        <%}%>
    <% }) %>

        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item <% if(page==1) {%> disabled <% } %>">
                    <a class="page-link " href="/reviews/?page=1" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                <li class="page-item <% if(page==1) {%> disabled <% } %>">
                    <a class="page-link " href="/reviews/?page=<%-page-1%>" aria-label="Previous">
                        <span aria-hidden="true">&lsaquo;</span>
                    </a>
                </li>
                <% switch(pages){
                        case 1:
                    %>
                <li class="page-item active"><a class="page-link" href="#">
                        1
                    </a></li>
                <%
                        break;
                        case 2:
                    %>
                <% if(page==1) {
                    %>
                <li class="page-item active"><a class="page-link" href="#">
                        1
                    </a></li>
                <li class="page-item"><a class="page-link" href="/reviews/?page=2">
                        2
                    </a></li>

                <%
                    }else{
                    %>
                <li class="page-item "><a class="page-link" href="/reviews/?page=1">
                        1
                    </a></li>
                <li class="page-item active"><a class="page-link" href="#">
                        2
                    </a></li>
                <% 
                } 
                %>

                <%
                        break;
                        default:
                    %>

                <% switch(page){
                            case 1:
                        %>
                <li class="page-item active"><a class="page-link" href="#">
                        1
                    </a></li>
                <li class="page-item"><a class="page-link" href="/reviews/?page=2">
                        2
                    </a></li>
                <li class="page-item "><a class="page-link" href="/reviews/?page=3">
                        3
                    </a></li>
                <%
                            break;
                            case pages:
                        %>
                <li class="page-item "><a class="page-link" href="/reviews/?page=<%-pages-2%>">
                        <%-pages-2%>
                    </a></li>
                <li class="page-item "><a class="page-link" href="/reviews/?page=<%-pages-1%>">
                        <%-pages-1%>
                    </a></li>
                <li class="page-item active"><a class="page-link" href="#">
                        <%-pages%>
                    </a></li>
                <%
                            break;
                            default:
                        %>
                <li class="page-item "><a class="page-link" href="/reviews/?page=<%-page-1%>">
                        <%-page-1%>
                    </a></li>
                <li class="page-item active"><a class="page-link" href="/reviews/?page=<%-page%>">
                        <%-page%>
                    </a></li>
                <li class="page-item "><a class="page-link" href="/reviews/?page=<%-page+1%>">
                        <%-page+1%>
                    </a></li>
                <% 
                    } 
                    %>

                <% 
                    } 
                    %>
                <li class="page-item <% if(page==pages) {%> disabled <% } %>">
                    <a class="page-link" href="/reviews/?page=<%-page+1%>" aria-label="Next">
                        <span aria-hidden="true">&rsaquo;</span>
                    </a>
                </li>
                <li class="page-item <% if(page==pages) {%> disabled <% } %>">
                    <a class="page-link" href="/reviews/?page=<%-pages%>" aria-label=" Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>


        <% } %>
    </div>

</div>

<script>
    const rewiewForm = document.getElementById("review_form");
    rewiewForm.onclick = (e) => {
        Array.from(rewiewForm.getElementsByClassName("is-invalid")).forEach(
            (el) => {
                el.classList.remove("is-invalid");
            }
        );
    };

    (rewiewForm.onsubmit = async (e) => {
        e.preventDefault();
        const data = new FormData(rewiewForm);
        const body = {};

        for (let [name, value] of data) {
            body[name] = value;
        }
        let haveError = false;
        if (
            body.name.match(/[^A-Za-zА-Яа-я\s]/) ||
            body.name.length < 2 ||
            body.name.length > 32
        ) {

            rewiewForm["rewiew-name"].classList.add("is-invalid");
            haveError = true;
        }
        if (
            body.text.match(/[^A-Za-zА-Яа-я\d\(\)\s]/) ||
            body.text.length < 5 ||
            body.text.length > 1000
        ) {
            rewiewForm["rewiew-text"].classList.add("is-invalid");
            haveError = true;
        }

        if (haveError) return;

        try {
            const response = await fetch("/reviews", {
                method: "POST",
                headers: {
                    "content-type": "application/json",
                },
                body: JSON.stringify(body),
            });

            const data = await response.json();

            if (response.status < 400) {
                document.location.reload();
            } else if (400 <= response.status < 500) {

                data.errors.forEach((err) => {
                    switch (err.key) {
                        case "name":
                            rewiewForm["rewiew-name"].classList.add("is-invalid");
                            break;
                        case "text":
                            rewiewForm["rewiew-text"].classList.add(
                                "is-invalid"
                            );
                            break;
                    }
                });
            } else {
            }
        } catch (err) {
            console.log(err);
        }
    });



    const deleteButtons = document.getElementsByClassName("deleteButton")
    if (deleteButtons) {
        for (let btn of deleteButtons) {
            btn.addEventListener("click", async (e) => {
                const { id } = e.target;
                const reviewId = id.split("delete")[1]

                try {
                    const { status } = await fetch(`/reviews/${reviewId}`, {
                        method: "DELETE",
                    });
                    if (status == 200) {
                        document.location.reload();
                    }

                } catch (err) {
                    console.log(err);
                }
            })
        }
    }

    const editButtons = document.getElementsByClassName("editButton")
    if (editButtons) {
        for (let btn of editButtons) {
            btn.addEventListener("click", (e) => {
                const cardDiv = btn.parentNode.parentNode.parentNode;
                const cardArea = cardDiv.getElementsByClassName("cardArea")[0]
                const cardform = cardDiv.querySelector("form")
                cardArea.hidden = true
                cardform.hidden = false
            })
        }
    }
    const backButtons = document.getElementsByClassName("backButton")
    if (backButtons) {
        for (let btn of backButtons) {
            btn.addEventListener("click", (e) => {
                const cardDiv = btn.parentNode.parentNode.parentNode;
                const cardArea = cardDiv.getElementsByClassName("cardArea")[0]
                const cardform = cardDiv.querySelector("form")
                cardArea.hidden = false
                cardform.hidden = true
            })
        }
    }

    const forms = document.getElementById("review-block").querySelectorAll("form")
    if (forms) {
        for (let form of forms) {
            form.onclick = (e) => {
                Array.from(form.getElementsByClassName("is-invalid")).forEach(
                    (el) => {
                        el.classList.remove("is-invalid");
                    }
                );
            };
            form.onsubmit = async (e) => {
                e.preventDefault()
                const data = new FormData(form);
                const body = {};

                for (let [name, value] of data) {
                    body[name] = value;
                }

                const inputName = form.getElementsByClassName("textarea-name")[0]
                const inputText = form.getElementsByClassName("textarea-text")[0]
                let haveError = false;
                if (
                    body.name.match(/[^A-Za-zА-Яа-я\s]/) ||
                    body.name.length < 2 ||
                    body.name.length > 32
                ) {
                    inputName.classList.add("is-invalid");
                    haveError = true;
                }
                if (
                    body.text.match(/[^A-Za-zА-Яа-я\d\(\)\s]/) ||
                    body.text.length < 5 ||
                    body.text.length > 1000
                ) {
                    inputText.classList.add("is-invalid");
                    haveError = true;
                }

                if (haveError) return;

                const { id } = e.target;

                const reviewId = id.split("form")[1]

                try {
                    const response = await fetch(`/reviews/${reviewId}`, {
                        method: "PUT",
                        headers: {
                            "content-type": "application/json",
                        },
                        body: JSON.stringify(body),
                    });
                    const data = await response.json();

                    if (response.status < 400) {
                        const { name, text } = body

                        const cardDiv = form.parentNode;
                        const cardArea = cardDiv.getElementsByClassName("cardArea")[0]
                        const cardform = cardDiv.querySelector("form")
                        const divName = cardArea.getElementsByClassName("div-name")[0]
                        const divText = cardArea.getElementsByClassName("div-text")[0]
                        divName.innerText = name
                        divText.innerText = text
                        cardArea.hidden = false
                        cardform.hidden = true
                    } else if (400 <= response.status < 500) {

                        data.errors.forEach((err) => {
                            switch (err.key) {
                                case "name":
                                    inputName.classList.add("is-invalid");
                                    break;
                                case "text":
                                    inputText.classList.add(
                                        "is-invalid"
                                    );
                                    break;
                            }
                        });
                    } else {
                        console.log(data.errors);
                    }
                } catch (err) {
                    console.log(err);
                }

            }
        }
    }

</script>


<%- include("../layout/footer") %>