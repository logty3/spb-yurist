<%- include("../../layout/header") %>

<div class="col-md-10  list-group-item pb-4">
    <form id="post_form">
        <h3>Редактирование поста</h3>
        <div class="mb-3">
            <label for="post-title">Заголовок</label>
            <input type=" text" class="form-control" name="title" id="post-title" value="<%-post.title%>">
            <div class="invalid-feedback">
                Заголовок должен содержать от 5 до 50 русских или английских символов
            </div>
        </div>

        <div class=" mb-3">
            <label for="post-body">Текст</label>
            <textarea class="form-control" name="body" id="post-body" rows="3">
                <%-post.body%>
            </textarea>
            <div class="invalid-feedback">
                Текст должен содержать от 100 до 10000 символов
            </div>
        </div>
        <button class=" btn btn-primary btn-lg btn-block">Отправить</button>
    </form>
</div>

<script>
    const postForm = document.getElementById("post_form");

    postForm.onclick = (e) => {
        Array.from(postForm.getElementsByClassName("is-invalid")).forEach(
            (el) => {
                el.classList.remove("is-invalid");
            }
        );
    };

    postForm.onsubmit = async (e) => {
        e.preventDefault();
        const data = new FormData(postForm);
        const body = {};

        for (let [name, value] of data) {
            body[name] = value;
        }

        let haveError = false
        if (
            body.title.match(/[^A-Za-zА-Яа-я\s]/) ||
            body.title.length < 5 ||
            body.title.length > 50
        ) {
            postForm["post-title"].classList.add("is-invalid");
            haveError = true;
        }
        if (

            body.body.length < 100 ||
            body.body.length > 10000
        ) {
            postForm["post-body"].classList.add("is-invalid");
            haveError = true;
        }

        if (haveError) return;

        try {
            const response = await fetch("/admin/post/<%-post.postId%>", {
                method: "PUT",
                headers: {
                    "content-type": "application/json",
                },
                body: JSON.stringify(body),
            });
            const data = await response.json();
            if (response.status < 400) {
                document.location = `/blog/${data.post.postId}`
            } else if (400 <= response.status < 500) {
                data.errors.forEach((err) => {
                    switch (err.key) {
                        case "title":
                            postForm["post-title"].classList.add("is-invalid");
                            break;
                        case "body":
                            postForm["post-body"].classList.add("is-invalid");
                            break;
                    }
                });
            } else {
            }
        } catch (err) {
            console.log(err);
        }
    };
</script>

<%- include("../../layout/footer") %>